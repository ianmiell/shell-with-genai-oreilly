= Presentation: File manipulation

ON BACON!!!

== find

Find is a useful tool to locate files on your filesystem.

 cd
 find ~/git/kubernetes -name kubernetes                               # find files with the name 'kubernetes' in the folder 'git'
 find ~/git/kubernetes -name kubernetes -type f                       # find files with the name 'kubernetes' in the folder 'git' that are of type 'file'
 find ~/git/kubernetes -name kubernetes -type d                       # find files with the name 'kubernetes' in the folder 'git' that are of type 'directory'
 man find                                                             # look for info on types and flags
 find ~/git/kubernetes -name '*.go' -type f -exec grep network {} \;  # look for Go files and search them for the work network

== locate
Locate is a faster tool for finding files across the whole system. It depends on a database being kept up to date with the `updatedb` command.

 touch someuniquefile                              # create a file that does not exist
 locate someuniquefile                             # not there
 sudo updatedb                                     # update the database
 locate someuniquefile                             # file is in the database now


== diff
diff is used all the time:

 cd
mkdir icl-file
cd icl-file
touch afile
cp afile afile.copied
diff afile afile.copied                           # no difference
                                                  # next three lines add a line to afile.copied
cat >> afile.copied << EOF
a line added
EOF

 diff afile afile.copied                           # diff shows line added
                                                   # next three lines add a line to afile

Output of above:

 0a1
 > a line added

Converts first file to the second using commands from 'ed'
The diff format is based on `ed` program commands.
We don't cover `ed` here, so briefly: first file line number(s), command, and second file line number(s)
So here, on the zeroth line of file 1 (ie the very start), you 'a'dd a line to line 1.

 cat >> afile << EOF
 another line added
 EOF

 diff afile afile.copied                           # diff shows two different lines

To do recursive diff:

 cd
 cd git
 diff kubernetes kubernetes-bak                    # just looks at contents of the folders
 diff -r kubernetes kubernetes-bak                 # recurses down, looking for differences in files
 touch kubernetes-bak/somefile                     # add a file to kubernetes-bak
 diff -r kubernetes kubernetes-bak                 # file mentioned in diff
                                                   # next three lines add a file with some content
 cat > kubernetes/somefile << EOF
 asdasfasf
 EOF

 diff -r kubernetes kubernetes-bak                 # file diffed

#== cp
#Copying files is another common activity.
#
# touch afile                                       # create a file
# cp afile copyofafile                              # simple copying of a file
# rm afile copyofafile                              # remove files
#
#If you want to copy a folder and all its contents, you can use cp -r:
#
# cd ~/git
# cp -r kubernetes kubernetes-bak
#
#but if you repeat the command you get a problem. The whole folder is copied into the folder you copied to:
#
# cp -r kubernetes kubernetes-bak                   # copy contents of folder
# ls kubernetes-bak                                 # list contents of folder - kubernetes is in there
# ls kubernetes-bak/kubernetes                      # contents of that folder match
# rm -rf kubernetes-bak                             # remove copy
#

OPTIONAL:
A more useful command for backups is rsync:

 rsync --dry-run -avz kubernetes/ kubernetes-bak   # dry run, -a basically treats folder and contents as a single unit
                                                   # forward slash is important, otherwise it puts kubernetes-bak/kubernetes/CONTENTS
                                                   # rather than kubernetes-bak/CONTENTS
 rsync -avz kubernetes/ kubernetes-bak             # for real
 rsync -avz kubernetes/ kubernetes-bak             # re-run, with no change to files
 touch kubernetes/newfile                          # create a new file
 ls -lrt kubernetes                                # show new file
 rsync -avz kubernetes/ kubernetes-bak             # copies over only new file
 touch kubernetes/newfile                          # update file
 rsync -avz kubernetes/ kubernetes-bak             # copies over updated/touched file


