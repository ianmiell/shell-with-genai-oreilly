Here documents are one of the handiest tricks you will have at your disposal.  They allow you to embed the content of files directly in your scripts without too much overhead.

You will cover:
- What ‘here documents’ are
- What ‘here strings’ are
- How they are used in shell scripts

 mkdir -p bns_heredocs && cd bns_heredocs

The first line starts with cat followed by a redirection to a file.
Then you use two left chevrons and follow that with a string that represents
a marker for the end of the file's contents. In this case, the word is `END`.

 cat > afile.txt << END

Then you type in whatever you want the file to contain.

 A file can contain
        whatever you like

When you're done, you can finish the file by typing the string you used as a marker on the first line alone on its own line:

 END

It doesn't matter what the delimiter is. It could be 'END', 'EOF', 'anything', but it must be a single word.

 cat afile.txt

=== More Advanced Here Docs

 cat > pidfile << END
 The parent pid is $PPID
 END

but what if we want the $PPID?

 cat > pidfile << 'END'
 The parent pid is $PPID
 END

To make it easier to see:

 cat > script <<- 'END'
 	#!/bin/bash
 	echo $PPID
 	echo This is not the END
 END

=== Here Strings
Related to the 'here doc', a 'here string' can be applied in the same way with the `<<<` operator:

       cat > herefile <<< "asd asd"

== EXERCISE
https://learning.oreilly.com/scenarios/bash-fundamentals-challenge/9781098138561/

== SOLUTION
vi script.sh   # CREATE A FILE CALLED script.sh

### The actual script
#!/bin/bash
cat > /root/pidscript.sh << 'END'
echo "$PPID $BASHPID"
END
chmod +x /root/pidscript.sh

# Now make the script executable
chmod +x /root/script.sh
